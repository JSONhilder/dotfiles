---
- name: Update and upgrade all packages
  hosts: localhost
  become: true
  tasks:
    - name: Update package lists
      apt:
        update_cache: yes

    - name: Upgrade all packages
      apt:
        upgrade: dist

- name: Install required packages on Pop OS
  hosts: localhost
  become: true
  tasks:
    - name: Install required packages
      apt:
        name:
          - make
          - gcc
          - curl
          - wget
          - ripgrep
          - fzf
          - stow
          - xclip
          - unzip
          - zsh
          - tmux
          - btop
          - neofetch
          - tree
          - transmission
          - vlc
        state: present

    - name: Switch Shell
      shell: chsh -s $(which zsh)

    - name: Install Starship
      shell: curl -sS https://starship.rs/install.sh | sh
      args:
        executable: /bin/bash

    - name: Install Node Version Manager
      shell: curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.3/install.sh | bash
      args:
        executable: /bin/bash

    - name: Install Rust
      shell: curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh
      args:
        executable: /bin/bash

- name: Install Visual Studio Code (VSCode)
  hosts: localhost
  become: true
  tasks:
    - name: Download the latest VSCode deb package
      get_url:
        url: "https://code.visualstudio.com/sha/download?build=stable&os=linux-deb-x64"
        dest: /tmp/code.deb
        validate_certs: no  # This is only to bypass SSL certificate validation. Remove it if you want to validate certificates.

    - name: Install VSCode deb package
      apt:
        deb: /tmp/code.deb
        state: present

- name: Install Docker
  hosts: localhost
  become: yes
  tasks:
    - name: Install dependencies
      apt:
        name: ['apt-transport-https', 'ca-certificates', 'curl', 'software-properties-common', 'gnupg', 'lsb-release']

    - name: Add Docker GPG key
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present

    - name: Add Docker repository
      apt_repository:
        repo: deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable
        state: present

    - name: Update apt cache
      apt:
        update_cache: yes

    - name: Install Docker packages
      apt:
        name: ['docker-ce', 'docker-ce-cli', 'containerd.io', 'docker-compose-plugin']
        state: present

    - name: Start and enable Docker service
      service:
        name: docker
        state: started
        enabled: yes

- name: Install lazydocker
  hosts: localhost
  gather_facts: false
  become: yes
  tasks:
    - name: Get latest release tag from GitHub API
      shell: >
        curl --silent https://api.github.com/repos/jesseduffield/lazydocker/releases/latest |
        grep -Po '"tag_name": "\K.*?(?=")'
      register: lazydocker_tag

    - name: Echo the tag
      debug:
        var: lazydocker_tag.stdout

    - name: Extract version from the tag
      shell: "echo {{ lazydocker_tag.stdout }} | cut -c 2-7"
      register: lazydocker_version

    - name: Set the file name
      set_fact:
        lazydocker_file: "lazydocker_{{ lazydocker_version.stdout }}_Linux_x86_64.tar.gz"

    - name: Set the download URL
      set_fact:
        lazydocker_download: "https://github.com/jesseduffield/lazydocker/releases/download/{{ lazydocker_tag.stdout }}/{{ lazydocker_file }}"

    - name: Download lazydocker archive
      get_url:
        url: "{{ lazydocker_download }}"
        dest: "~/{{ lazydocker_file }}"

    - name: Extract and install lazydocker
      shell: |
        cd ~
        tar xvf "{{ lazydocker_file }}" lazydocker
        sudo mv lazydocker /usr/local/bin/lazydocker
      ignore_errors: yes

    - name: Remove the downloaded archive
      file:
        path: "~/{{ lazydocker_file }}"
        state: absent